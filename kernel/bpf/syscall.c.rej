diff a/kernel/bpf/syscall.c b/kernel/bpf/syscall.c	(rejected hunks)
@@ -2962,6 +2962,8 @@ attach_type_to_prog_type(enum bpf_attach_type attach_type)
 		return BPF_PROG_TYPE_SK_LOOKUP;
 	case BPF_XDP:
 		return BPF_PROG_TYPE_XDP;
+	case BPF_XRP:
+		return BPF_PROG_TYPE_XRP;
 	default:
 		return BPF_PROG_TYPE_UNSPEC;
 	}
@@ -2972,6 +2974,9 @@ attach_type_to_prog_type(enum bpf_attach_type attach_type)
 #define BPF_F_ATTACH_MASK \
 	(BPF_F_ALLOW_OVERRIDE | BPF_F_ALLOW_MULTI | BPF_F_REPLACE)
 
+int xrp_bpf_prog_attach(const union bpf_attr *attr, struct bpf_prog *prog);
+int xrp_bpf_prog_detach(const union bpf_attr *attr);
+
 static int bpf_prog_attach(const union bpf_attr *attr)
 {
 	enum bpf_prog_type ptype;
@@ -3017,6 +3022,9 @@ static int bpf_prog_attach(const union bpf_attr *attr)
 	case BPF_PROG_TYPE_SOCK_OPS:
 		ret = cgroup_bpf_prog_attach(attr, ptype, prog);
 		break;
+	case BPF_PROG_TYPE_XRP:
+		ret = xrp_bpf_prog_attach(attr, prog);
+		break;
 	default:
 		ret = -EINVAL;
 	}
@@ -3053,6 +3061,8 @@ static int bpf_prog_detach(const union bpf_attr *attr)
 	case BPF_PROG_TYPE_CGROUP_SYSCTL:
 	case BPF_PROG_TYPE_SOCK_OPS:
 		return cgroup_bpf_prog_detach(attr, ptype);
+	case BPF_PROG_TYPE_XRP:
+		return xrp_bpf_prog_detach(attr);
 	default:
 		return -EINVAL;
 	}
